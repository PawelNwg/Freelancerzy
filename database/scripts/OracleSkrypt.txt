-- Generated by Oracle SQL Developer Data Modeler 19.2.0.182.1216
--   at:        2020-11-07 11:19:59 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE category (
    categoryid     NUMBER(7) NOT NULL,
    categoryname   VARCHAR2(30) NOT NULL
);

ALTER TABLE category ADD CONSTRAINT category_pk PRIMARY KEY ( categoryid );

CREATE TABLE credentials (
    userid     NUMBER(7) NOT NULL,
    password   VARCHAR2(200) NOT NULL
);

CREATE UNIQUE INDEX credentials__idx ON
    credentials (
        userid
    ASC );

ALTER TABLE credentials ADD CONSTRAINT credentials_pk PRIMARY KEY ( userid );

CREATE TABLE message (
    messageid    NUMBER(7) NOT NULL,
    userfromid   NUMBER(7) NOT NULL,
    usertoid     NUMBER(7) NOT NULL,
    "Date"       DATE DEFAULT SYSDATE NOT NULL,
    content      VARCHAR2(250) NOT NULL,
    status       VARCHAR2(20) NOT NULL
);

ALTER TABLE message ADD CONSTRAINT message_pk PRIMARY KEY ( messageid );

CREATE TABLE messagereport (
    reportid    NUMBER(7) NOT NULL,
    messageid   NUMBER(7) NOT NULL,
    reasonid    NUMBER(7) NOT NULL
);

ALTER TABLE messagereport ADD CONSTRAINT messagereport_pk PRIMARY KEY ( reportid );

CREATE TABLE offer (
    offerid                NUMBER(7) NOT NULL,
    userid                 NUMBER(7) NOT NULL,
    categoryid             NUMBER(7) NOT NULL,
    title                  VARCHAR2(40) NOT NULL,
    description            VARCHAR2(250),
    creationdate           DATE NOT NULL,
    lastmodificationdate   DATE,
    expirationdate         DATE NOT NULL,
    viewcounter            NUMBER(7) DEFAULT 0 NOT NULL,
    wage                   NUMBER
);

ALTER TABLE offer ADD CONSTRAINT offer_pk PRIMARY KEY ( offerid );

CREATE TABLE permission (
    permissionid   NUMBER(7) NOT NULL,
    name           VARCHAR2(25) NOT NULL
);

ALTER TABLE permission ADD CONSTRAINT permission_pk PRIMARY KEY ( permissionid );

CREATE TABLE permissionuser (
    userid         NUMBER(7) NOT NULL,
    permissionid   NUMBER(7) NOT NULL
);

ALTER TABLE permissionuser ADD CONSTRAINT permissionuser_pk PRIMARY KEY ( userid,
                                                                          permissionid );

CREATE TABLE reason (
    reasonid      NUMBER NOT NULL,
    name          VARCHAR2(20) NOT NULL,
    description   VARCHAR2(150)
);

ALTER TABLE reason ADD CONSTRAINT reason_pk PRIMARY KEY ( reasonid );

CREATE TABLE "User" (
    userid         NUMBER(7) NOT NULL,
    typeid         NUMBER(7) DEFAULT 1 NOT NULL,
    firstname      VARCHAR2(20) NOT NULL,
    surname        VARCHAR2(30) NOT NULL,
    emailaddress   VARCHAR2(40) NOT NULL,
    phonenumber    NUMBER(7)
);

ALTER TABLE "User" ADD CONSTRAINT user_pk PRIMARY KEY ( userid );

ALTER TABLE "User" ADD CONSTRAINT user__unv2 UNIQUE ( emailaddress );

CREATE TABLE useraddress (
    userid            NUMBER(7) NOT NULL,
    street            VARCHAR2(30) NOT NULL,
    "Number"          NUMBER(7) NOT NULL,
    apartmentnumber   NUMBER(7),
    zipcode           VARCHAR2(6),
    city              VARCHAR2(30) NOT NULL
);

CREATE UNIQUE INDEX useraddress__idx ON
    useraddress (
        userid
    ASC );

ALTER TABLE useraddress ADD CONSTRAINT useraddress_pk PRIMARY KEY ( userid );

CREATE TABLE usertype (
    typeid   NUMBER(7) NOT NULL,
    name     VARCHAR2(20) NOT NULL
);

ALTER TABLE usertype ADD CONSTRAINT usertype_pk PRIMARY KEY ( typeid );

ALTER TABLE credentials
    ADD CONSTRAINT credentials_user_fk FOREIGN KEY ( userid )
        REFERENCES "User" ( userid )
            ON DELETE CASCADE;

ALTER TABLE message
    ADD CONSTRAINT message_user_fk FOREIGN KEY ( userfromid )
        REFERENCES "User" ( userid );

ALTER TABLE message
    ADD CONSTRAINT message_user_fkv2 FOREIGN KEY ( usertoid )
        REFERENCES "User" ( userid );

ALTER TABLE messagereport
    ADD CONSTRAINT messagereport_message_fk FOREIGN KEY ( messageid )
        REFERENCES message ( messageid );

ALTER TABLE messagereport
    ADD CONSTRAINT messagereport_reason_fk FOREIGN KEY ( reasonid )
        REFERENCES reason ( reasonid );

ALTER TABLE offer
    ADD CONSTRAINT offer_category_fk FOREIGN KEY ( categoryid )
        REFERENCES category ( categoryid );

ALTER TABLE offer
    ADD CONSTRAINT offer_user_fk FOREIGN KEY ( userid )
        REFERENCES "User" ( userid )
            ON DELETE CASCADE;

ALTER TABLE permissionuser
    ADD CONSTRAINT permissionuser_permission_fk FOREIGN KEY ( permissionid )
        REFERENCES permission ( permissionid );

ALTER TABLE permissionuser
    ADD CONSTRAINT permissionuser_user_fk FOREIGN KEY ( userid )
        REFERENCES "User" ( userid );

ALTER TABLE "User"
    ADD CONSTRAINT user_usertype_fk FOREIGN KEY ( typeid )
        REFERENCES usertype ( typeid );

ALTER TABLE useraddress
    ADD CONSTRAINT useraddress_user_fk FOREIGN KEY ( userid )
        REFERENCES "User" ( userid )
            ON DELETE CASCADE;

CREATE SEQUENCE category_categoryid_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER category_categoryid_trg BEFORE
    INSERT ON category
    FOR EACH ROW
    WHEN ( new.categoryid IS NULL )
BEGIN
    :new.categoryid := category_categoryid_seq.nextval;
END;
/

CREATE SEQUENCE message_messageid_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER message_messageid_trg BEFORE
    INSERT ON message
    FOR EACH ROW
    WHEN ( new.messageid IS NULL )
BEGIN
    :new.messageid := message_messageid_seq.nextval;
END;
/

CREATE SEQUENCE messagereport_reportid_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER messagereport_reportid_trg BEFORE
    INSERT ON messagereport
    FOR EACH ROW
    WHEN ( new.reportid IS NULL )
BEGIN
    :new.reportid := messagereport_reportid_seq.nextval;
END;
/

CREATE SEQUENCE offer_offerid_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER offer_offerid_trg BEFORE
    INSERT ON offer
    FOR EACH ROW
    WHEN ( new.offerid IS NULL )
BEGIN
    :new.offerid := offer_offerid_seq.nextval;
END;
/

CREATE SEQUENCE permission_permissionid_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER permission_permissionid_trg BEFORE
    INSERT ON permission
    FOR EACH ROW
    WHEN ( new.permissionid IS NULL )
BEGIN
    :new.permissionid := permission_permissionid_seq.nextval;
END;
/

CREATE SEQUENCE reason_reasonid_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER reason_reasonid_trg BEFORE
    INSERT ON reason
    FOR EACH ROW
    WHEN ( new.reasonid IS NULL )
BEGIN
    :new.reasonid := reason_reasonid_seq.nextval;
END;
/

CREATE SEQUENCE user_userid_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER user_userid_trg BEFORE
    INSERT ON "User"
    FOR EACH ROW
    WHEN ( new.userid IS NULL )
BEGIN
    :new.userid := user_userid_seq.nextval;
END;
/

CREATE SEQUENCE usertype_typeid_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER usertype_typeid_trg BEFORE
    INSERT ON usertype
    FOR EACH ROW
    WHEN ( new.typeid IS NULL )
BEGIN
    :new.typeid := usertype_typeid_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            11
-- CREATE INDEX                             2
-- ALTER TABLE                             23
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           8
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          8
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
